(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{432:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"真-八股问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#真-八股问"}},[t._v("#")]),t._v(" 真-八股问")]),t._v(" "),s("h3",{attrs:{id:"redis-性能瓶颈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-性能瓶颈"}},[t._v("#")]),t._v(" redis 性能瓶颈")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Redis 管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。")])])]),t._v(" "),s("p",[t._v("Redis是一个高性能的键值存储数据库，但在某些情况下可能会出现性能瓶颈。以下是一些常见的Redis性能瓶颈问题：")]),t._v(" "),s("ol",[s("li",[t._v("网络延迟：Redis通常以客户端-服务器架构运行，网络延迟可能成为性能瓶颈。当客户端与Redis服务器之间的网络延迟较高时，会导致请求的响应时间增加。")]),t._v(" "),s("li",[t._v("内存容量限制：Redis的性能受限于可用的内存容量。如果Redis实例的内存使用接近或超过分配的内存限制，可能会导致性能下降。此时，可能需要考虑增加内存容量或优化数据模型以减少内存占用。")]),t._v(" "),s("li",[t._v("持久化操作：Redis支持持久化数据的机制，如RDB快照和AOF日志。在进行持久化操作时，会有一定的IO开销，可能会对性能产生影响。频繁的持久化操作或大规模的数据恢复过程可能会导致性能下降。")]),t._v(" "),s("li",[t._v("并发访问：高并发访问是另一个潜在的性能瓶颈。当多个客户端同时对Redis进行读写操作时，可能会导致竞争和阻塞，从而影响性能。在高并发场景下，可以考虑使用Redis的集群模式或使用分布式锁等机制来解决并发问题。")]),t._v(" "),s("li",[t._v("慢查询：如果Redis中执行的某些查询或操作耗时较长，会导致性能下降。可以通过使用Redis的慢查询日志功能来识别慢查询，并进行性能优化。")]),t._v(" "),s("li",[t._v("键设计：合理的键设计对于Redis性能至关重要。过长或过短的键名可能会导致内存浪费或哈希冲突。同时，选择适当的数据结构和Redis命令也会对性能产生影响。")])]),t._v(" "),s("p",[t._v("针对上述性能瓶颈问题，可以考虑以下优化策略：")]),t._v(" "),s("ul",[s("li",[t._v("使用高性能的网络连接和合适的网络配置，以减少网络延迟。")]),t._v(" "),s("li",[t._v("监控和管理Redis实例的内存使用情况，确保内存容量充足。")]),t._v(" "),s("li",[t._v("配置适当的持久化策略，并根据实际需求进行调整。")]),t._v(" "),s("li",[t._v("使用适当的并发控制机制，如连接池、分布式锁等，以提高并发访问性能。")]),t._v(" "),s("li",[t._v("定期检查和优化慢查询操作，以减少耗时操作对性能的影响。")]),t._v(" "),s("li",[t._v("注意键的设计和选择合适的数据结构，以减少内存占用和提高查询效率。")])]),t._v(" "),s("p",[t._v("综上所述，理解Redis性能瓶颈并采取相应的优化措施，可以提高Redis的性能和可扩展性。")]),t._v(" "),s("p",[t._v("详解:")]),t._v(" "),s("p",[t._v("Redis的管道（Pipeline）技术是一种批量执行多个Redis命令的机制，用于提高命令执行效率。通过使用管道技术，可以减少网络往返延迟的影响，从而提高Redis的吞吐量。")]),t._v(" "),s("p",[t._v("在传统的Redis命令执行方式中，每个命令都需要发送给Redis服务器并等待其响应后再发送下一个命令。这样的方式在需要执行大量命令时会存在较大的延迟开销。而使用管道技术，可以将多个命令一次性发送给Redis服务器，并一次性接收响应结果，从而减少了网络通信的次数。")]),t._v(" "),s("p",[t._v("使用Redis管道的一般步骤如下：")]),t._v(" "),s("ol",[s("li",[t._v("创建管道对象：通过Redis客户端库提供的API，创建一个管道对象，用于存储待发送的Redis命令。")]),t._v(" "),s("li",[t._v("将命令添加到管道中：将需要执行的Redis命令逐个添加到管道对象中。")]),t._v(" "),s("li",[t._v("执行管道命令：一次性将管道中的所有命令发送给Redis服务器。")]),t._v(" "),s("li",[t._v("接收响应结果：一次性接收Redis服务器返回的所有命令执行结果。")])]),t._v(" "),s("p",[t._v("通过管道技术，多个命令可以在一次网络通信中批量执行，大大减少了网络通信的开销。这对于需要执行大量命令的场景，如批量写入或读取数据，可以显著提高性能。")]),t._v(" "),s("p",[t._v("需要注意的是，使用管道技术并不会改变Redis的事务特性。在管道中的命令仍然会按照顺序执行，不会出现并发执行的情况。因此，如果需要保证一组命令的原子性，仍然需要使用Redis的事务机制。")]),t._v(" "),s("p",[t._v("总结而言，Redis的管道技术通过批量执行多个命令，减少了网络通信的次数，从而提高了Redis的性能。在需要执行大量命令的场景下，合理使用管道技术可以显著改善系统性能。")]),t._v(" "),s("h3",{attrs:{id:"spring事务什么场景会失效-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring事务什么场景会失效-2"}},[t._v("#")]),t._v(" spring事务什么场景会失效？ +2")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("p",[t._v("详解:\nSpring事务可以在很多场景下使用，但也有一些情况下会导致事务失效。以下是一些可能导致Spring事务失效的情况：")]),t._v(" "),s("ol",[s("li",[t._v("未被Spring管理的方法：只有通过Spring容器管理的Bean上的方法才能参与事务。如果在没有被Spring管理的对象或方法上使用事务注解，事务将无法生效。")]),t._v(" "),s("li",[t._v("异常的处理：Spring事务默认只在未捕获的RuntimeException及其子类异常上回滚事务。如果捕获了异常并处理，事务将不会回滚。如果需要在捕获到异常后回滚事务，可以在异常处理代码中手动抛出RuntimeException或使用@Transactional(rollbackFor = Exception.class)来指定回滚的异常类型。")]),t._v(" "),s("li",[t._v("方法内部调用：Spring事务默认只在外部方法调用中生效，内部方法调用不会开启新的事务。如果在同一个类中的一个方法调用另一个方法，且两个方法都有事务注解，内部方法的事务将被忽略。")]),t._v(" "),s("li",[t._v("事务传播行为：事务的传播行为决定了事务在方法调用链中的行为。如果在调用链中存在不同的事务传播行为，可能导致事务的隔离级别和回滚策略失效。")]),t._v(" "),s("li",[t._v("编程式事务管理：如果使用编程式事务管理（如通过PlatformTransactionManager手动管理事务），需要确保正确的使用事务的begin、commit和rollback操作。如果在编程式事务管理中存在错误或遗漏，事务可能无法正确回滚或提交。")]),t._v(" "),s("li",[t._v("异步方法：在异步方法中，事务的提交或回滚操作可能会失效。这是因为异步方法的执行是在新的线程中进行的，事务上下文无法正确地传播到新的线程中。")])]),t._v(" "),s("p",[t._v("要确保Spring事务生效，应注意以上情况，并在使用事务时遵循Spring事务的最佳实践。使用正确的事务注解、正确处理异常、使用适当的事务传播行为和避免异步方法中的事务操作等都是确保事务正常运行的关键。")]),t._v(" "),s("h3",{attrs:{id:"spring事务-为什么在private上使用会失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring事务-为什么在private上使用会失效"}},[t._v("#")]),t._v(" spring事务 为什么在private上使用会失效 ？")]),t._v(" "),s("blockquote",[s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("众所周知，java的访问权限主要有四种：private、default、protected、public，它们的权限从左到右，依次变大。")]),t._v(" "),s("p",[t._v("但如果我们在开发过程中，把有某些事务方法，定义了错误的访问权限，就会导致事务功能出问题，例如：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("@Service\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    @Transactional\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("UserModel userModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("我们可以看到add方法的访问权限被定义成了"),s("code",[t._v("private")]),t._v("，这样会导致事务失效，spring要求被代理方法必须是"),s("code",[t._v("public")]),t._v("的。")]),t._v(" "),s("p",[t._v("说白了，在"),s("code",[t._v("AbstractFallbackTransactionAttributeSource")]),t._v("类的"),s("code",[t._v("computeTransactionAttribute")]),t._v("方法中有个判断，如果目标方法不是public，则"),s("code",[t._v("TransactionAttribute")]),t._v("返回null，即不支持事务。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" TransactionAttribute "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Method method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" @Nullable Class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" targetClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Don't allow no-public methods as required.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allowPublicMethodsOnly")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Modifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPublic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModifiers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The method may be on an interface, but we need attributes from the target class.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the target class is null, the method will be unchanged.")]),t._v("\n    Method specificMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AopUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMostSpecificMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" targetClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First try is the method in the target class.")]),t._v("\n    TransactionAttribute txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("specificMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" txAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Second try is the transaction attribute on the target class.")]),t._v("\n    txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("specificMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeclaringClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ClassUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUserLevelMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" txAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("specificMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fallback is to look at the original method.")]),t._v("\n      txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" txAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last fallback is the class of the original method.")]),t._v("\n      txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findTransactionAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeclaringClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txAttr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ClassUtils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUserLevelMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" txAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br")])]),s("p",[t._v("也就是说，如果我们自定义的事务方法（即目标方法），它的访问权限不是"),s("code",[t._v("public")]),t._v("，而是private、default或protected的话，spring则不会提供事务功能。")])]),t._v(" "),s("h3",{attrs:{id:"mysql索引失效的场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引失效的场景"}},[t._v("#")]),t._v(" mysql索引失效的场景？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("like 没有遵循最左，联合索引没有遵循最左，in， 用where 1=1")])])]),t._v(" "),s("p",[t._v("详解:")]),t._v(" "),s("p",[t._v("MySQL索引在某些情况下可能会失效，导致查询性能下降。以下是一些常见的导致MySQL索引失效的场景：")]),t._v(" "),s("ol",[s("li",[t._v("不使用索引的函数操作：如果在查询条件中使用了函数操作，如使用"),s("code",[t._v("WHERE")]),t._v("子句中的"),s("code",[t._v("UPPER")]),t._v("、"),s("code",[t._v("LOWER")]),t._v("、"),s("code",[t._v("TRIM")]),t._v("等函数，MySQL可能无法使用索引来加速查询。")]),t._v(" "),s("li",[t._v("条件使用了索引列的表达式：如果在查询条件中对索引列进行了一些表达式计算，如使用"),s("code",[t._v("WHERE")]),t._v("子句中的"),s("code",[t._v("DATE_FORMAT")]),t._v("、"),s("code",[t._v("CONCAT")]),t._v("等函数，MySQL可能无法使用索引来加速查询。")]),t._v(" "),s("li",[t._v("列类型不匹配：如果在查询条件中对列进行了类型转换，如将字符列与数字进行比较，MySQL可能无法使用索引来加速查询。")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("OR")]),t._v("操作符：当查询条件中使用了"),s("code",[t._v("OR")]),t._v("操作符时，如果其中一个条件无法使用索引，整个查询可能无法充分利用索引。")]),t._v(" "),s("li",[t._v("字符串模式匹配的模式以通配符开头：如果在查询条件中使用了字符串模式匹配操作，如使用"),s("code",[t._v("LIKE")]),t._v("操作符并将通配符放在开头，如"),s("code",[t._v("LIKE '%abc'")]),t._v("，MySQL可能无法使用索引进行匹配。")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("NOT")]),t._v("操作符：当查询条件中使用了"),s("code",[t._v("NOT")]),t._v("操作符，MySQL可能无法使用索引来加速查询。")]),t._v(" "),s("li",[t._v("数据量过小：如果表中的数据量非常小，MySQL可能会选择全表扫描而不使用索引。")]),t._v(" "),s("li",[t._v("索引列数据分布不均匀：如果索引列的数据分布不均匀，即某些值出现频率过高，而其他值出现频率较低，MySQL可能会选择全表扫描而不使用索引。")]),t._v(" "),s("li",[t._v("索引列上使用了函数或表达式：如果在索引列上使用了函数或表达式，MySQL可能无法使用该索引。")])]),t._v(" "),s("p",[t._v("为了避免MySQL索引失效，可以采取以下措施：")]),t._v(" "),s("ul",[s("li",[t._v("确保查询条件中的列能够使用索引，避免使用函数操作或表达式。")]),t._v(" "),s("li",[t._v("尽量避免使用"),s("code",[t._v("OR")]),t._v("操作符，使用"),s("code",[t._v("IN")]),t._v("操作符替代。")]),t._v(" "),s("li",[t._v("针对查询需求，创建适当的索引以支持常见的查询模式。")]),t._v(" "),s("li",[t._v("对于模式匹配操作，尽量将通配符放在结尾而不是开头。")]),t._v(" "),s("li",[t._v("优化查询语句，避免不必要的类型转换。")]),t._v(" "),s("li",[t._v("分析表的数据分布情况，确保索引列的数据分布相对均匀。")])]),t._v(" "),s("p",[t._v("综上所述，了解MySQL索引失效的场景，并采取适当的优化措施，可以提高查询性能并充分利用索引的优势。")]),t._v(" "),s("h3",{attrs:{id:"mysql-like-索引失效-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-like-索引失效-为什么"}},[t._v("#")]),t._v(" mysql like 索引失效 为什么？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Mysql索引有最左原则，所以通过 "),s("font",{attrs:{color:"cornflowerblue"}},[t._v("like '%XX%'")]),t._v("查询的时候会造成"),s("font",{attrs:{color:"red"}},[t._v("索引失效")]),t._v("，一般采用"),s("font",{attrs:{color:"cornflowerblue"}},[t._v("like 'XX%'")]),t._v("右边匹配的方式来索引。")],1)])]),t._v(" "),s("p",[t._v("详解:")]),t._v(" "),s("p",[t._v("MySQL中的"),s("code",[t._v("LIKE")]),t._v("操作符在某些情况下可能导致索引失效，从而无法充分利用索引来加速查询。以下是一些常见的导致"),s("code",[t._v("LIKE")]),t._v("索引失效的情况：")]),t._v(" "),s("ol",[s("li",[t._v("通配符在开头：当"),s("code",[t._v("LIKE")]),t._v("操作中的通配符（%）出现在模式字符串的开头时，例如"),s("code",[t._v("LIKE '%abc'")]),t._v("，这种情况下MySQL无法有效利用索引进行匹配，因为索引是按照从左到右的顺序进行比较的。这种情况下，MySQL将不得不扫描整个索引或执行全表扫描。")]),t._v(" "),s("li",[t._v("通配符在中间：当"),s("code",[t._v("LIKE")]),t._v("操作中的通配符（%）出现在模式字符串的中间时，例如"),s("code",[t._v("LIKE 'a%bc'")]),t._v("，虽然MySQL可以使用索引进行匹配，但索引的范围将受到限制。MySQL只能利用索引找到以"),s("code",[t._v("a")]),t._v("开头的值，然后再对这些值进行模式匹配，这可能会导致较多的行被检索出来，从而降低查询性能。")]),t._v(" "),s("li",[t._v("通配符在结尾但出现在字符串的非首字符位置：当"),s("code",[t._v("LIKE")]),t._v("操作中的通配符（%）出现在模式字符串的结尾，但不是字符串的首字符时，例如"),s("code",[t._v("LIKE 'abc%'")]),t._v("，MySQL可以使用索引进行前缀匹配，但无法进行后缀匹配。这意味着索引将被用于查找以"),s("code",[t._v("abc")]),t._v("开头的值，但不能用于查找以"),s("code",[t._v("abc")]),t._v("结尾的值。")]),t._v(" "),s("li",[t._v("大量前缀匹配：当使用"),s("code",[t._v("LIKE")]),t._v("操作进行大量前缀匹配时，例如"),s("code",[t._v("LIKE 'abc%'")]),t._v("，MySQL可以使用索引进行匹配，但如果前缀匹配的字符非常短（例如，只有1-2个字符），MySQL可能会选择放弃使用索引而执行全表扫描，因为使用索引需要进行多次IO操作。")])]),t._v(" "),s("p",[t._v("为了避免"),s("code",[t._v("LIKE")]),t._v("索引失效，可以考虑以下优化策略：")]),t._v(" "),s("ul",[s("li",[t._v("尽量避免将通配符放在模式字符串的开头，或者将通配符放在字符串的首字符位置。")]),t._v(" "),s("li",[t._v("如果可能，将通配符放在模式字符串的结尾，并确保它是字符串的首字符。")]),t._v(" "),s("li",[t._v("对于需要进行大量前缀匹配的情况，尽量使用更长的前缀，以减少匹配的行数。")]),t._v(" "),s("li",[t._v("如果需要进行复杂的模式匹配，考虑使用全文本搜索引擎（如MySQL的全文本搜索功能）来替代"),s("code",[t._v("LIKE")]),t._v("操作。")])]),t._v(" "),s("p",[t._v("综上所述，合理使用"),s("code",[t._v("LIKE")]),t._v("操作符并了解其对索引的影响，可以避免"),s("code",[t._v("LIKE")]),t._v("索引失效并提高查询性能。")]),t._v(" "),s("h3",{attrs:{id:"mysql聚簇索引-和-非聚簇索引的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql聚簇索引-和-非聚簇索引的区别"}},[t._v("#")]),t._v(" mysql聚簇索引 和 非聚簇索引的区别？")]),t._v(" "),s("p",[t._v("第一个重大区别是InnoDB的数据文件本身就是索引文件。")]),t._v(" "),s("p",[t._v("从上文知道，MyISAM索引文件和数据文件是分离的，索引文件仅保存数据记录的地址。")]),t._v(" "),s("blockquote",[s("p",[t._v("innodb只有聚簇索引  索引与数据在一起")])]),t._v(" "),s("blockquote",[s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/57a9d2b8fb81455a4e5c076becaa3ace.png",alt:"img"}})])]),t._v(" "),s("blockquote",[s("p",[t._v("myisam只有非聚簇索引  索引与文件分开")]),t._v(" "),s("p",[t._v("MyISAM引擎使用B+Tree作为索引结构，叶节点的data域存放的是数据记录的地址。")]),t._v(" "),s("p",[t._v("下图是MyISAM索引的原理图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/639dfc8e1441fe2ec43ecc0e2f099c82.png",alt:"img"}})])]),t._v(" "),s("h3",{attrs:{id:"mysql-2级索引的存储方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-2级索引的存储方式"}},[t._v("#")]),t._v(" mysql 2级索引的存储方式?")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("二级索引又称为辅助索引，是因为二级索引的叶子节点存储的数据是主键。也就是说，通过二级索引，可以定位主键的位置")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021012216441358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoZXNwcml0,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})])]),t._v(" "),s("h3",{attrs:{id:"springmvc的运行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的运行流程"}},[t._v("#")]),t._v(" springmvc的运行流程")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("h3",{attrs:{id:"工作中遇到的了比较棘手的问题-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作中遇到的了比较棘手的问题-2"}},[t._v("#")]),t._v(" 工作中遇到的了比较棘手的问题？  +2")]),t._v(" "),s("blockquote",[s("p",[t._v("自由发挥")])]),t._v(" "),s("h3",{attrs:{id:"redis-的键失效策略是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-的键失效策略是什么"}},[t._v("#")]),t._v(" redis 的键失效策略是什么？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("h3",{attrs:{id:"springcloud中的负载均衡算法有哪几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springcloud中的负载均衡算法有哪几种"}},[t._v("#")]),t._v(" springcloud中的负载均衡算法有哪几种？")]),t._v(" "),s("blockquote",[s("table",[s("thead",[s("tr",[s("th",[t._v("RandomRule")]),t._v(" "),s("th",[t._v("随机策略")]),t._v(" "),s("th",[t._v("随机选择server")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("RoundRobinRule")]),t._v(" "),s("td",[t._v("轮询策略")]),t._v(" "),s("td",[t._v("轮询选择， 轮询index，选择index对应位置的Server；")])]),t._v(" "),s("tr",[s("td",[t._v("RetryRule")]),t._v(" "),s("td",[t._v("重试策略")]),t._v(" "),s("td",[t._v("对选定的负载均衡策略机上重试机制，在一个配置时间段内当选择Server不成功，则一直尝试使用subRule的方式选择一个可用的server；")])]),t._v(" "),s("tr",[s("td",[t._v("BestAvailableRule")]),t._v(" "),s("td",[t._v("最低并发策略")]),t._v(" "),s("td",[t._v("逐个考察server，如果server断路器打开，则忽略，再选择其中并发链接最低的server")])]),t._v(" "),s("tr",[s("td",[t._v("AvailabilityFilteringRule")]),t._v(" "),s("td",[t._v("可用过滤策略")]),t._v(" "),s("td",[t._v("过滤掉一直失败并被标记为circuit tripped的server，过滤掉那些高并发链接的server（active connections超过配置的阈值）或者使用一个AvailabilityPredicate来包含过滤server的逻辑，其实就就是检查status里记录的各个Server的运行状态；")])]),t._v(" "),s("tr",[s("td",[t._v("ResponseTimeWeightedRule")]),t._v(" "),s("td",[t._v("响应时间加权重策略")]),t._v(" "),s("td",[t._v("根据server的响应时间分配权重，响应时间越长，权重越低，被选择到的概率也就越低。响应时间越短，权重越高，被选中的概率越高，这个策略很贴切，综合了各种因素，比如：网络，磁盘，io等，都直接影响响应时间")])]),t._v(" "),s("tr",[s("td",[t._v("ZoneAvoidanceRule")]),t._v(" "),s("td",[t._v("区域权重策略")]),t._v(" "),s("td",[t._v("综合判断server所在区域的性能，和server的可用性，轮询选择server并且判断一个AWS Zone的运行性能是否可用，剔除不可用的Zone中的所有server")])])])])]),t._v(" "),s("h3",{attrs:{id:"jvm的内存结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm的内存结构"}},[t._v("#")]),t._v(" jvm的内存结构")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("h3",{attrs:{id:"arraylist扩容原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist扩容原理"}},[t._v("#")]),t._v(" arrayList扩容原理？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("p",[t._v("详解:\nArrayList在Java中是一种动态数组，其扩容原理主要涉及到以下几个关键概念：")]),t._v(" "),s("ol",[s("li",[t._v("初始容量（Initial Capacity）：ArrayList在创建时会分配一个初始容量，即底层数组的大小。默认情况下，初始容量为10。")]),t._v(" "),s("li",[t._v("负载因子（Load Factor）：负载因子是指当ArrayList中的元素数量达到底层数组容量的百分比时触发扩容操作。在Java中，ArrayList的负载因子固定为1，即当元素数量达到数组容量时触发扩容。")]),t._v(" "),s("li",[t._v("扩容策略：当ArrayList需要扩容时，会创建一个更大的数组来存储元素，并将原有元素复制到新数组中。Java中的ArrayList采用的是自动扩容机制，扩容时会将当前容量（Capacity）增加一半，即新容量为原容量的1.5倍。")])]),t._v(" "),s("p",[t._v("具体的扩容过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("当添加一个新元素时，ArrayList会先检查当前元素数量是否达到了数组容量。如果达到了容量，就会触发扩容操作。")]),t._v(" "),s("li",[t._v("扩容时，ArrayList会根据当前容量计算出新的容量，即原容量的1.5倍，并创建一个新的数组。")]),t._v(" "),s("li",[t._v("将原有数组中的元素逐个复制到新数组中，保持元素的顺序不变。")]),t._v(" "),s("li",[t._v("扩容完成后，ArrayList会使用新数组替代原数组，并更新容量信息。")])]),t._v(" "),s("p",[t._v("需要注意的是，扩容操作是一项较为耗时的操作，因为它涉及到将所有元素从旧数组复制到新数组的过程。因此，在使用ArrayList时，可以通过设置初始容量来减少扩容的频率，从而提高性能。")]),t._v(" "),s("p",[t._v("总结而言，ArrayList的扩容原理是在元素数量达到数组容量时触发扩容操作，创建一个新的更大容量的数组，并将原有元素复制到新数组中。通过自动扩容机制，ArrayList能够动态地适应元素的添加，并保持高效的元素访问和操作。")]),t._v(" "),s("h3",{attrs:{id:"_10个元素使用什么容器-查询最快速"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10个元素使用什么容器-查询最快速"}},[t._v("#")]),t._v(" 10个元素使用什么容器 查询最快速？")]),t._v(" "),s("blockquote",[s("p",[t._v("list")])]),t._v(" "),s("h3",{attrs:{id:"springboot-自动装配原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot-自动装配原理"}},[t._v("#")]),t._v(" springboot 自动装配原理？")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("javaguide")])])]),t._v(" "),s("p",[t._v("详解:")]),t._v(" "),s("p",[t._v("Spring Boot的自动装配（Auto-Configuration）是其核心特性之一，它能够自动配置和装配应用程序所需的各种组件和功能。Spring Boot的自动装配原理主要基于以下几个关键概念：")]),t._v(" "),s("ol",[s("li",[t._v("条件注解（Conditional Annotation）：Spring Boot使用条件注解来定义自动配置的条件。这些条件注解根据类路径上存在的特定类、Bean的存在或缺失、配置属性的值等条件来决定是否应用自动配置。")]),t._v(" "),s("li",[t._v("自动配置类（Auto-Configuration Class）：自动配置类是使用条件注解进行标注的Java类，其中包含了配置应用程序所需的各种组件和功能。这些类位于"),s("code",[t._v("META-INF/spring.factories")]),t._v("文件中，Spring Boot会自动加载这些类并根据条件进行自动配置。")]),t._v(" "),s("li",[t._v("配置元数据（Configuration Metadata）：配置元数据是一组描述配置项的信息，包括属性名称、默认值、描述等。Spring Boot通过使用注解处理器来生成和处理配置元数据，以支持自动补全和验证。")]),t._v(" "),s("li",[t._v("自动配置过程：当应用程序启动时，Spring Boot会自动扫描并加载"),s("code",[t._v("META-INF/spring.factories")]),t._v("文件中的自动配置类。然后，根据条件注解的条件判断，确定是否应用自动配置。如果条件满足，自动配置类将会被实例化，并根据配置元数据进行相应的组件装配和配置。")])]),t._v(" "),s("p",[t._v("总体而言，Spring Boot的自动装配原理通过条件注解、自动配置类和配置元数据实现。它能够根据应用程序的依赖和配置信息，自动判断和配置所需的组件和功能，简化了开发者的配置工作，并提高了开发效率。同时，开发者也可以通过自定义条件注解和自动配置类来扩展和定制Spring Boot的自动装配行为。")]),t._v(" "),s("h3",{attrs:{id:"aop的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop的实现方式"}},[t._v("#")]),t._v(" aop的实现方式？")]),t._v(" "),s("blockquote",[s("p",[t._v("cglib、jdk代理")])]),t._v(" "),s("p",[t._v("详解：")]),t._v(" "),s("p",[t._v("AOP（Aspect-Oriented Programming，面向切面编程）是一种编程范式，旨在通过在应用程序中横向切割关注点（cross-cutting concerns）来提高代码的模块性和可维护性。在Java中，AOP的实现方式主要包括以下几种：")]),t._v(" "),s("ol",[s("li",[t._v("静态代理：静态代理是一种常见的AOP实现方式。通过手动创建代理类，将横切逻辑与原始对象的业务逻辑分离。在代理类中，可以在目标方法的前后插入额外的逻辑，以实现切面功能。")]),t._v(" "),s("li",[t._v("动态代理：动态代理是一种在运行时动态生成代理对象的方式。Java中提供了两种动态代理机制：基于接口的代理（JDK动态代理）和基于类的代理（CGLIB动态代理）。动态代理可以通过在运行时生成代理对象并拦截方法调用来实现切面功能。")]),t._v(" "),s("li",[t._v("注解：注解是一种将横切逻辑与目标方法关联的方式。通过在目标方法上添加特定的注解，AOP框架可以识别这些注解，并在运行时根据注解的定义执行相应的切面逻辑。")]),t._v(" "),s("li",[t._v("XML配置：一些AOP框架提供了使用XML配置的方式来定义切面。通过在配置文件中定义切点和切面，可以将横切逻辑与目标方法进行关联。")]),t._v(" "),s("li",[t._v("字节码增强：字节码增强是一种底层的AOP实现方式，通过直接修改目标类的字节码来实现横切逻辑的插入。字节码增强可以在编译期间或运行期间完成。")])]),t._v(" "),s("p",[t._v("以上是几种常见的AOP实现方式，每种方式都有其适用的场景和特点。在实际开发中，可以根据项目的需求和框架的支持，选择合适的AOP实现方式来实现切面功能。")]),t._v(" "),s("h3",{attrs:{id:"new-hashmap-1000-put-1000个不同的key-会发生扩容吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-hashmap-1000-put-1000个不同的key-会发生扩容吗"}},[t._v("#")]),t._v(" new hashmap(1000) put 1000个不同的key 会发生扩容吗？")]),t._v(" "),s("blockquote",[s("p",[t._v("HashMap 初始容量指定为 1000，会被 tableSizeFor() 调整为 1024，但是它只是表示 table 数组为 1024，扩容的重要依据扩容阈值会在 resize() 中调整为 768（1024 * 0.75）。")]),t._v(" "),s("p",[t._v("它是不足以承载 1000 条数据的，最终在存够 1k 条数据之前，还会触发一次动态扩容。")])]),t._v(" "),s("p",[t._v("详解：")]),t._v(" "),s("p",[t._v("当使用 "),s("code",[t._v("new HashMap(1000)")]),t._v(" 创建一个初始容量为 1000 的 HashMap，并且向其中添加 1000 个不同的键（key），HashMap 会进行扩容。")]),t._v(" "),s("p",[t._v("在 HashMap 内部，有一个负载因子（load factor）的概念，默认为 0.75。负载因子表示 HashMap 在达到容量的百分比时触发扩容操作。当元素数量达到容量的 75% 时，HashMap 会自动进行扩容，以保持较低的哈希冲突，提高性能。")]),t._v(" "),s("p",[t._v("在创建时指定初始容量的 HashMap，当添加元素时，实际容量会逐渐增加。当元素数量达到容量的 75% 时，HashMap 将会进行扩容。因此，虽然你指定了初始容量为 1000，但当添加第 751 个键时，HashMap 将触发扩容操作。")]),t._v(" "),s("p",[t._v("扩容操作涉及到重新计算哈希值，重新分配键值对到新的存储桶（buckets），因此会引起一定的性能开销。为了减少扩容的次数，提高 HashMap 的性能，通常建议在创建 HashMap 时，尽可能指定一个适当的初始容量，以减少扩容的次数。")]),t._v(" "),s("h3",{attrs:{id:"new-hashmap-1000-初始容量是多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-hashmap-1000-初始容量是多少"}},[t._v("#")]),t._v(" new hashmap(1000) 初始容量是多少？")]),t._v(" "),s("blockquote",[s("p",[t._v("1024")]),t._v(" "),s("p",[t._v("初始化的大小并不一定是你传入值的大小，而是tableSizeFor后的值，为了迎合底层实现 ，put时会调用到resize();")])]),t._v(" "),s("h3",{attrs:{id:"arraylist-和-linkedlist-分别添加1000个元素-那个更占内存空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-和-linkedlist-分别添加1000个元素-那个更占内存空间"}},[t._v("#")]),t._v(" arrayList 和 LinkedList 分别添加1000个元素 那个更占内存空间？")]),t._v(" "),s("blockquote",[s("p",[t._v("LinkedList的占用空间更大，因为每个节点要维护指向前后地址的两个节点，但也不是绝对，如果刚好数据量超过ArrayList默认的临时值时，ArrayList占用的空间也是不小的，因为扩容的原因会浪费将近原来数组一半的容量，不过，因为ArrayList的数组变量是用transient关键字修饰的，如果集合本身需要做序列化操作的话，ArrayList这部分多余的空间不会被序列化")])]),t._v(" "),s("h3",{attrs:{id:"线程池初始化后-会创建线程核心数吗-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池初始化后-会创建线程核心数吗-2"}},[t._v("#")]),t._v(" 线程池初始化后 会创建线程核心数吗？ +2")]),t._v(" "),s("blockquote",[s("p",[t._v("不会 只有在使用时（submit，execute）才会去创建，会先判断当前活动线程是否小于核心线程数")])]),t._v(" "),s("p",[t._v("详解:\n在Java中，线程池在初始化时并不会立即创建所有的核心线程数。线程池的核心线程数代表了线程池中同时可执行任务的最大线程数量。线程池的初始化过程包括以下几个步骤：")]),t._v(" "),s("ol",[s("li",[t._v("创建线程池对象：通过线程池的构造函数创建一个线程池对象，并指定核心线程数、最大线程数、线程空闲时间等参数。")]),t._v(" "),s("li",[t._v("创建核心线程：在线程池初始化时，并不会立即创建所有的核心线程数。相反，线程池会根据需要逐渐创建核心线程，以适应任务的提交。")]),t._v(" "),s("li",[t._v("接收任务：线程池开始接收任务，并根据任务的数量和线程池的工作队列策略来决定任务的处理方式。")]),t._v(" "),s("li",[t._v("动态调整线程数量：如果线程池中的核心线程数还未达到设定的值，而有新的任务到达，则会创建新的核心线程来处理任务。否则，新任务将被放入工作队列中等待执行。")])]),t._v(" "),s("p",[t._v("总结而言，线程池在初始化时，并不会立即创建所有的核心线程数。它会根据需要逐渐创建核心线程，以适应任务的提交。当任务到达时，线程池会动态调整线程数量，确保有足够的线程来处理任务。")]),t._v(" "),s("h3",{attrs:{id:"threadlocal用过吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal用过吗"}},[t._v("#")]),t._v(" ThreadLocal用过吗?")])])}),[],!1,null,null,null);s.default=e.exports}}]);